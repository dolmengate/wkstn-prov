---
- hosts: 127.0.0.1
  connection: local
  become: yes
  vars:
    home_user: lookup('env', 'USERNAME')
    pycharm_version: 2019.1.1
    ubuntu_release: bionic
  tasks:
  - name: copy ~/.bashrc
    copy:
      src: ./roles/common/files/home/.bashrc
      dest: /home/{{ home_user}}/
  - name: copy /etc/profile
    copy:
      src: ./roles/common/files/etc/profile
      dest: /etc/
  - name: copy ~/.profile
    copy:
      src: ./roles/common/files/home/.profile
      dest: /home/{{ home_user }}/
  - name: copy ~/.vimrc
    copy:
      src: ./roles/common/files/home/.vimrc
      dest: /home/{{ home_user }}/
  - name: copy user ssh config
    copy:
      src: ./roles/common/files/home/.ssh/config
      dest: /home/{{ home_user }}/.ssh/
  - name: install initial distro updates
    apt:
      name: "*"
      update_cache: yes
      state: latest
      force_apt_get: yes
  - name: install hardware config utils and window manager
    apt: 
      name: "{{ a_v_packages }}"
    vars:
      a_v_packages:
      - xinit
      - i3
      - xbacklight
      - alsa-utils
      - pulseaudio
    notify: 
    - restart display manager
  - name: copy i3 config
    copy:
      src: ./roles/common/files/home/.config/i3/config
      dest: /home/{{ home_user }}/.config/i3/
  - name: add docker apt repository key
    apt_key:
      url: "https://download.docker.com/linux/ubuntu/gpg"
      state: present
  - name: add docker apt repository 
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu {{ ubuntu_release }} stable
  - name: install docker
    apt:
      name: "{{ docker_packages }}"
    vars:
      docker_packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
  - name: download pycharm tarball
    get_url:
      url: https://download.jetbrains.com/python/pycharm-community-{{pycharm_version}}.tar.gz
      dest: /tmp/pycharm-community-{{pycharm_version}}.tar.gz
  - name: extract pycharm tarball
    unarchive:
      src: /tmp/pycharm-community-{{ pycharm_version }}.tar.gz
      dest: /tmp/
      owner: "{{ home_user }}"
      remote_src: yes
  - name: move extracted pycharm to /usr/local/bin/
    command: mv /tmp/pycharm-community-{{ pycharm_version }}/ /usr/local/bin/
  - name: remove extension from pycharm.sh
    command: mv /usr/local/bin/pycharm-community-{{ pycharm_version }}/bin/pycharm.sh /usr/local/bin/pycharm-community-{{ pycharm_version }}/bin/pycharm
  - name: add pycharm to $PATH
    lineinfile:
      path: /home/{{ home_user }}/.profile
      line: PATH="/usr/local/bin/pycharm-community-{{ pycharm_version }}/bin/:$PATH"
  - name: copy redshift.service file
    copy:
      src: ./roles/common/files/redshift.service
      dest: /etc/systemd/system/
  - name: create symlink to graphical.target.wants for redshift.service
    file:
      src: /etc/systemd/system/redshift.service
      dest: /etc/systemd/system/graphical.target.wants/redshift.service
      state: link
  - name: daemon-reload systemd and start redshift.service
    systemd:
      name: redshift.service
      state: started
      daemon_reload: yes
      enabled: yes
  - name: re-establish hardlink /etc/profile to repo
    file:
      state: hard
      src: /etc/profile
      dest: ./roles/common/files/etc/profile
  - name: re-establish hardlink .profile to repo
    file:
      state: hard
      src: /home/{{ home_user }}/.profile
      dest: ./roles/common/files/home/.profile
  - name: re-establish hardlink .bashrc to repo
    file:
      state: hard
      src: /home/{{ home_user }}/.bashrc
      dest: ./roles/common/files/home/.bashrc
  - name: re-establish hardlink i3 config to repo
    file:
      state: hard
      src: /home/{{ home_user }}/.config/i3/config
      dest: ./roles/common/files/home/.config/i3/config
  - name: re-establish hardlink ssh config to repo
    file:
      state: hard
      src: /home/{{ home_user }}/.ssh/config
      dest: ./roles/common/files/home/.ssh/config
  - name: re-establish hardlink .vimrc to repo
    file:
      state: hard
      src: /home/{{ home_user }}/.vimrc
      dest: ./roles/common/files/home/.vimrc
  handlers:
    - name: restart display manager
      service:
        name: display-manager.service
        state: restarted
